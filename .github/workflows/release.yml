name: Release Workflow
on:
  workflow_dispatch:
    inputs:
      release_candidate_version:
        description: "Release Candidate Version:"
        required: true

jobs:
  define_version_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: define_version
        name: Define release version
        run: |-
          OUTPUT_VERSION=$(bash scripts/define_release_version.sh ${{ github.event.inputs.release_candidate_version }})
          echo "detected version = $OUTPUT_VERSION"
          echo ::set-output name=version::$(echo $OUTPUT_VERSION)
    outputs:
      version: ${{ steps.define_version.outputs.version }}

  release:
    runs-on: ubuntu-latest
    needs: define_version_job
    steps:
      - uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - env:
          TRAVIS_API_TOKEN: ${{ secrets.TRAVIS_API_TOKEN }}
        run: |
          echo "Triggered by: ${{ github.actor }}!"
          branch_name=${{ steps.extract_branch.outputs.branch }}
          commit_sha=${{ github.sha }}

          echo "branch name: $branch_name"
          if [ "$branch_name" != "main" ]; then
              echo "Release should build only from main branch"
              exit 1
          fi
          if [ -z "$TRAVIS_API_TOKEN" ]; then
              echo "TRAVIS_API_TOKEN is empty"
              exit 1
          fi

          REQUEST_BUILD_BODY="
          {
            \"request\": {
              \"branch\": \"$branch_name\",
              \"sha\": \"$commit_sha\",
              \"merge_mode\": \"deep_merge_append\",
              \"config\": {
                \"env\": {
                  \"global\": [
                    \"RELEASE_DATREE_PROD=true\",
                    \"RELEASE_VERSION=${{ needs.define_version_job.outputs.version }}\"
                  ]
                }
              }
            }
          }
          "

          REQUEST_BUILD_BODY=$REQUEST_BUILD_BODY ./.github/workflows/request-travis-build-and-wait-until-finished.sh
  release-docker:
    env:
      REPO_NAME: datree
      IMAGE_NAME: datree
      CI_IMAGE_NAME: datreeci
    name: Release container image to public registries
    needs: [ release, define_version_job ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push datree image to registries
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/image-datree/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ needs.define_version_job.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha
      - name: Build and push datree CI image to registries
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/image-datreeci/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REPO_NAME }}/${{ env.CI_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha
