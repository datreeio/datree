apiVersion: v1
policies:
  - name: security_best_practices
    isDefault: true
    rules:
      - identifier: CUSTOM_SECURITY_USER_CHECK
        messageOnFailure: ''
      - identifier: CUSTOM_SECURITY_GROUPS_CHECK
        messageOnFailure: ''
      - identifier: CUSTOM_SECURITY_PRIVILEGE_CHECK
        messageOnFailure: ''
      - identifier: CUSTOM_SECURITY_FILESYSTEM_ACCESSIBILITY
        messageOnFailure: ''
      - identifier: CUSTOM_SECURITY_DEPRECATED_CHECK
        messageOnFailure: ''
      - idenitifer: CUSTOM_SECURITY_PRIVILEGED_CHECK
        messageOnFailure: ''
      - identifier: CUSTOM_SECURITY_IMAGE_PULL
        messageOnFailure: ''

customRules:
  - identifier: CUSTOM_SECURITY_USER_CHECK
    name: Check for runAsUser field setting [CUSTOM RULE]
    defaultMessageOnFailure: Add runAsUser setting, ensure it is a number between range 0 and 10000
    schema:
      properties:
        kind:
          enum:
            - Pod
            - Deployment
            - StatefulSet
            - DaemonSet
        spec:
          properties:
            securityContext:
              properties:
                runAsUser:
                  minimum: 0
                  maximum: 10000
              required:
                - runAsUser
          required:
            - securityContext

  - identifier: CUSTOM_SECURITY_GROUPS_CHECK
    name: Check for runAsGroup field setting [CUSTOM RULE]
    defaultMessageOnFailure: Add runAsGroup setting, ensure it is a number between range 0 and 10000
    schema:
      properties:
        kind:
          enum:
            - Pod
            - Deployment
            - StatefulSet
            - DaemonSet
        spec:
          properties:
            securityContext:
              properties:
                runAsGroup:
                  minimum: 0
                  maximum: 10000
              required:
                - runAsGroup
          required:
            - securityContext

  - identifier: CUSTOM_SECURITY_PRIVILEGE_CHECK
    name: Check for allowPrivilegeEscalation setting [CUSTOM RULE]
    defaultMessageOnFailure: Add allowPrivilegeEscalation setting, ensure it is a boolean
    schema:
      properties:
        kind:
          enum:
            - Pod
            - Deployment
            - StatefulSet
            - DaemonSet
        spec:
          properties:
            securityContext:
              properties:
                allowPrivilegeEscalation:
                  enum:
                    - true
                    - false
              required:
                - allowPrivilegeEscalation
          required:
            - securityContext

  - identifier: CUSTOM_SECURITY_FILESYSTEM_ACCESSIBILITY
    name: Check for readOnlyRootFilesystem setting [CUSTOM RULE]
    defaultMessageOnFailure: Add readOnlyRootFilesystem setting, ensure it is a boolean
    schema:
      properties:
        kind:
          enum:
            - Pod
            - Deployment
            - StatefulSet
            - DaemonSet
        spec:
          properties:
            securityContext:
              properties:
                readOnlyRootFilesystem:
                  enum:
                    - true
                    - false
              required:
                - readOnlyRootFilesystem
          required:
            - securityContext

  - identifier: CUSTOM_SECURITY_DEPRECATED_CHECK
    name: Check for use of PodSecurityPolicy (Deprecated) [CUSTOM RULE]
    defaultMessageOnFailure: Change the `kind` field from PodSecurityPolicy to Pod
    schema:
      not:
        properties:
          kind:
            enum:
              - PodSecurityPolicy

  - identifier: CUSTOM_SECURITY_PRIVILEGED_CHECK
    name: Check for the privileged flag [CUSTOM RULE]
    defaultMessageOnFailure: Add the privileged flag, ensure it is a boolean
    schema:
      properties:
        kind:
          enum:
            - Pod
            - Deployment
            - StatefulSet
            - DaemonSet
        spec:
          properties:
            securityContext:
              properties:
                privileged:
                  enum:
                    - true
                    - false
              required:
                - privileged
          required:
            - securityContext

  - identifier: CUSTOM_SECURITY_IMAGE_PULL
    name: Ensure imagePullPolicy is set to always [CUSTOM RULE]
    defaultMessageOnFailure:
    schema:
      properties:
        kind:
          enum:
            - Pod
            - Deployment
            - StatefulSet
            - DaemonSet
        spec:
          properties:
            containers:
              type: array
              items:
                properties:
                  imagePullPolicy:
                    enum:
                      - Always
