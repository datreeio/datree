apiVersion: v1
rules:
  - id: 6
    name: 'Prevent Ingress from forwarding all traffic to a single container'
    uniqueName: 'INGRESS_INCORRECT_HOST_VALUE_PERMISSIVE'
    enabledByDefault: true,
    documentationUrl: 'https://hub.datree.io/prevent-ingress-forwarding-traffic-to-single-container'
    messageOnFailure: 'Incorrect value for key `host` - specify host instead of using a wildcard character ("*")'
    category: Networking
    schema:
      if:
        properties:
          kind:
            enum:
              - Ingress
      then:
        properties:
          spec:
            properties:
              rules:
                type: array
                items:
                  properties:
                    host:
                      type: string
                      not:
                        enum:
                          - '*'
  - id: 10
    name: 'Ensure deployment-like resource is using a valid restart policy'
    uniqueName: 'WORKLOAD_INCORRECT_RESTARTPOLICY_VALUE_ALWAYS'
    enabledByDefault: true,
    documentationUrl: 'https://hub.datree.io/ensure-valid-restart-policy'
    messageOnFailure: 'Incorrect value for key `restartPolicy` - any other value than `Always` is not supported by this resource'
    category: Workload
    schema:
      properties:
        spec:
          properties:
            template:
              properties:
                spec:
                  properties:
                    restartPolicy:
                      enum:
                        - 'Always'
  - id: 16
    name: 'Ensure Deployment has more than one replica configured'
    uniqueName: 'DEPLOYMENT_INCORRECT_REPLICAS_VALUE'
    enabledByDefault: true,
    documentationUrl: 'https://hub.datree.io/ensure-minimum-two-replicas'
    messageOnFailure: 'Incorrect value for key `replicas` - running 2 or more replicas will increase the availability of the service'
    category: Workload
    schema:
      if:
        properties:
          kind:
            enum:
              - Deployment
      then:
        properties:
          spec:
            properties:
              replicas:
                minimum: 2
  - id: 17
    name: 'Ensure CronJob has a configured deadline'
    uniqueName: 'CRONJOB_MISSING_STARTINGDEADLINESECOND_KEY'
    enabledByDefault: true,
    documentationUrl: 'https://hub.datree.io/ensure-cronjob-deadline'
    messageOnFailure: 'Missing property object `startingDeadlineSeconds` - set a time limit to the cron execution to allow killing it if exceeded'
    category: CronJob
    schema:
      if:
        properties:
          kind:
            enum:
              - CronJob
      then:
        properties:
          spec:
            properties:
              startingDeadlineSeconds:
                type: number
            required:
              - startingDeadlineSeconds
  - id: 20
    name: 'Prevent containers from having root access capabilities'
    uniqueName: 'CONTAINERS_INCORRECT_PRIVILEGED_VALUE_TRUE'
    enabledByDefault: true,
    documentationUrl: 'https://hub.datree.io/prevent-privileged-containers'
    messageOnFailure: 'Incorrect value for key `privileged` - this mode will allow the container the same access as processes running on the host'
    category: Containers
    schema:
      definitions:
        specContainers:
          properties:
            spec:
              properties:
                containers:
                  type: array
                  items:
                    properties:
                      securityContext:
                        properties:
                          privileged:
                            not:
                              enum:
                                - true
                                - 'true'
      allOf:
        - $ref: "#/definitions/specContainers"
      additionalProperties:
        $ref: "#"
      items:
        $ref: "#"
  - id: 24
    name: 'Prevent CronJob from executing jobs concurrently'
    uniqueName: 'CRONJOB_MISSING_CONCURRENCYPOLICY_KEY'
    enabledByDefault: true,
    documentationUrl: 'https://hub.datree.io/prevent-cronjob-concurrency'
    messageOnFailure: Missing property object `concurrencyPolicy` - the behavior will be more deterministic if jobs won't run concurrently
    category: CronJob
    schema:
      if:
        properties:
          kind:
            enum:
              - CronJob
      then:
        properties:
          spec:
            properties:
              concurrencyPolicy:
                enum:
                  - 'Forbid'
                  - 'Replace'
            required:
              - concurrencyPolicy
  - id: 26
    name: Prevent containers from sharing the host's PID namespace
    uniqueName: 'CONTAINERS_INCORRECT_HOSTPID_VALUE_TRUE'
    enabledByDefault: false,
    documentationUrl: 'https://hub.datree.io/prevent-using-host-pid'
    messageOnFailure: Incorrect value for key `hostPID` - running on the host's PID namespace enables access to sensitive information from processes running outside the container
    category: Containers
    schema:
      definitions:
        specContainers:
          properties:
            spec:
              properties:
                hostPID:
                  not:
                    enum:
                      - true
                      - 'true'
      allOf:
        - $ref: "#/definitions/specContainers"
      additionalProperties:
        $ref: "#"
      items:
        $ref: "#"
  - id: 27
    name: 'Prevent containers from sharing the host`s IPC namespace'
    uniqueName: 'CONTAINERS_INCORRECT_HOSTIPC_VALUE_TRUE'
    enabledByDefault: false,
    documentationUrl: 'https://hub.datree.io/prevent-using-host-ipc'
    messageOnFailure: 'Incorrect value for key `hostIPC` - running on the host`s IPC namespace can be (maliciously) used to interact with other processes running outside the container'
    category: Containers
    schema:
      definitions:
        specContainers:
          properties:
            spec:
              properties:
                hostIPC:
                  not:
                    enum:
                      - true
                      - 'true'
      allOf:
        - $ref: "#/definitions/specContainers"
      additionalProperties:
        $ref: "#"
      items:
        $ref: "#"
  - id: 28
    name: Prevent containers from sharing the host's network namespace
    uniqueName: 'CONTAINERS_INCORRECT_HOSTIPC_VALUE_TRUE'
    enabledByDefault: false,
    documentationUrl: 'https://hub.datree.io/prevent-using-host-network'
    messageOnFailure: Incorrect value for key `hostNetwork` - running on the host's network namespace can allow a compromised container to sniff network traffic
    category: Containers
    schema:
      definitions:
        specContainers:
          properties:
            spec:
              properties:
                hostNetwork:
                  not:
                    enum:
                      - true
                      - 'true'
      allOf:
        - $ref: "#/definitions/specContainers"
      additionalProperties:
        $ref: "#"
      items:
        $ref: "#"
  - id: 29
    name: 'Prevent containers from accessing host files by using high UIDs'
    uniqueName: 'CONTAINERS_INCORRECT_RUNASUSER_VALUE_LOWUID'
    enabledByDefault: false,
    documentationUrl: 'https://hub.datree.io/prevent-uid-conflicts'
    messageOnFailure: 'Incorrect value for key `runAsUser` - value should be above 9999 to reduce the likelihood that the UID is already taken'
    category: Containers
    schema:
      definitions:
        specContainers:
          properties:
            spec:
              properties:
                containers:
                  type: array
                  items:
                    properties:
                      securityContext:
                        properties:
                          runAsUser:
                            minimum: 10000
      allOf:
        - $ref: "#/definitions/specContainers"
      additionalProperties:
        $ref: "#"
      items:
        $ref: "#"
  - id: 30
    name: 'Prevent containers from mounting Docker socket'
    uniqueName: 'CONTAINERS_INCORRECT_PATH_VALUE_DOCKERSOCKET'
    enabledByDefault: false,
    documentationUrl: 'https://hub.datree.io/prevent-mounting-docker-socket'
    messageOnFailure: 'Incorrect value for key `path` - avoid mounting the docker.socket becasue it can allow container breakout'
    category: Containers
    schema:
      definitions:
        specContainers:
          properties:
            spec:
              properties:
                containers:
                  type: array
                  items:
                    properties:
                      volumeMounts:
                        type: array
                        items:
                          properties:
                            mountPath:
                              not:
                                enum:
                                  - "/var/run/docker.sock"
        specVolumes:
          properties:
            spec:
              properties:
                volumes:
                  type: array
                  items:
                    properties:
                      hostPath:
                        properties:
                          path:
                            not:
                              enum:
                                - "/var/run/docker.sock"
      allOf:
        - $ref: "#/definitions/specContainers"
        - $ref: "#/definitions/specVolumes"
      additionalProperties:
        $ref: "#"
      items:
        $ref: "#"
  - id: 31
    name: 'Prevent ConfigMap security vulnerability (CVE-2021-25742)'
    uniqueName: 'CONFIGMAP_CVE2021_25742_INCORRECT_SNIPPET_ANNOTATIONS_VALUE'
    enabledByDefault: false,
    documentationUrl: 'https://hub.datree.io/-prevent-configmap-security-vulnerability-cve-2021-25742'
    messageOnFailure: Missing property object `allow-snippet-annotations` - set it to "false" to override default behaviour
    category: Security
    schema:
      if:
        properties:
          kind:
            enum:
              - ConfigMap
      then:
        properties:
          data:
            properties:
              allow-snippet-annotations:
                enum:
                    - 'false'
            required:
              - allow-snippet-annotations
  - id: 32
    name: 'Prevent Ingress security vulnerability (CVE-2021-25742)'
    uniqueName: 'INGRESS_CVE2021_25742_INCORRECT_SERVER_SNIPPET_KEY'
    enabledByDefault: false,
    documentationUrl: 'https://hub.datree.io/-prevent-ingress-security-vulnerability-cve-2021-25742'
    messageOnFailure: Forbidden property object `server-snippet` - ingress-nginx custom snippets are not allowed
    category: Security
    schema:
      if:
        properties:
          kind:
            enum:
              - Ingress
      then:
        properties:
          metadata:
            properties:
              annotations:
                not:
                  propertyNames:
                    pattern: ^.*server-snippet$
  - id: 33
    name: 'Prevent container security vulnerability (CVE-2021-25741)'
    uniqueName: 'CONTAINER_CVE2021_25741_INCORRECT_SUBPATH_KEY'
    enabledByDefault: false,
    documentationUrl: 'https://hub.datree.io/-prevent-container-security-vulnerability-cve-2021-25741'
    messageOnFailure: Forbidden property object `subPath` - malicious users can gain access to files & directories outside of the volume
    category: Security
    schema:
      definitions:
        subPathPattern:
          properties:
            spec:
              properties:
                containers:
                  type: array
                  items:
                    properties:
                      volumeMounts:
                        type: array
                        items:
                          propertyNames:
                            not:
                              pattern: ^subPath$
      allOf:
        - $ref: "#/definitions/subPathPattern"
      additionalProperties:
        $ref: "#"
      items:
        $ref: "#"
  - id: 34
    name: 'Prevent EndpointSlice security vulnerability (CVE-2021-25737)'
    uniqueName: 'ENDPOINTSLICE_CVE2021_25373_INCORRECT_ADDRESSES_VALUE'
    enabledByDefault: false,
    documentationUrl: 'https://hub.datree.io/-prevent-endpointslice-validation-from-enabling-host-network-hijack-cve-2021-25737'
    messageOnFailure: Incorrect value for key `addresses` - IP address is within vulnerable ranges (127.0.0.0/8 and 169.254.0.0/16)
    category: Security
    schema:
      if:
        properties:
          kind:
            enum:
              - EndpointSlice
      then:
        properties:
          endpoints:
            type: array
            items:
              properties:
                addresses:
                  type: array
                  items:
                    not:
                      oneOf:
                        - pattern: ^(169\.254\.)
                        - pattern: ^(127\.)
